function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Children, cloneElement } from "react";
import { oneOf } from "prop-types";
import { TransitionGroup } from "react-transition-group";
import AlertTransition from "./alert-transition";
import { createUseStyles } from "react-jss";
import { bootstrap } from "toetag";
import transitionStyles from "./transition-styles";
export var ENTER_TIMEOUT = 500;
export var EXIT_TIMEOUT = 300;

var AlertContainer = function AlertContainer(_ref) {
  var _ref$position = _ref.position,
      position = _ref$position === void 0 ? "top-right" : _ref$position,
      children = _ref.children;
  var classes = useStyles();
  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(classes.container, " ").concat(classes[position])
  }, /*#__PURE__*/React.createElement(TransitionGroup, null, Children.map(children, function (child) {
    return child ? /*#__PURE__*/React.createElement(AlertTransition, {
      key: child.props.id
    }, /*#__PURE__*/cloneElement(child)) : null;
  })));
};

export var useStyles = createUseStyles(_objectSpread({
  container: {
    position: "fixed",
    paddingTop: bootstrap.paddingBaseVertical,
    paddingRight: bootstrap.paddingBaseHorizontal,
    paddingBottom: bootstrap.paddingBaseVertical,
    paddingLeft: bootstrap.paddingBaseHorizontal,
    zIndex: bootstrap.zindexNavbarFixed + 1
  },
  "top-right": {
    top: 0,
    right: 0,
    textAlign: "right"
  },
  "top-left": {
    top: 0,
    left: 0
  },
  "bottom-right": {
    bottom: 0,
    right: 0,
    textAlign: "right"
  },
  "bottom-left": {
    bottom: 0,
    left: 0
  }
}, transitionStyles));
export var PropTypes = {
  position: oneOf(["top-right", "top-left", "bottom-right", "bottom-left"])
};
AlertContainer.propTypes = PropTypes;
export default AlertContainer;